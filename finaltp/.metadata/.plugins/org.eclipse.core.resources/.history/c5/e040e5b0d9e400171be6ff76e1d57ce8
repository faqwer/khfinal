package finaltp.controller;

import java.io.File;
import java.sql.Date;
import java.util.Calendar;
import java.util.Iterator;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.codehaus.jackson.map.util.JSONPObject;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.servlet.ModelAndView;

import finaltp.plan.model.PlanDTO;

@Controller
public class PlanController {

	@RequestMapping("/routesearch.do")
	public ModelAndView routeSearchForm() {
		ModelAndView mav = new ModelAndView();
		mav.setViewName("planner/routeSearch");
		return mav;
	}
	
	@RequestMapping("/planwrite.do")
	public ModelAndView plannerWrite(MultipartHttpServletRequest multi, HttpSession session){
		ModelAndView mav=new ModelAndView();
		PlanDTO pdto=new PlanDTO();
		String id = "faqwer";
		/*String id = (String) session.getAttribute("userid");*/
        String path = "C:\\Users\\Hyun\\Desktop\\finaltp\\.metadata\\.plugins\\org.eclipse.wst.server.core\\tmp0\\wtpwebapps\\finaltp\\img\\plancover\\"+id+"\\";
        
        String newFileName = ""; // 업로드 되는 파일명
        
        File dir = new File(path);
        if(!dir.isDirectory()){
            dir.mkdir();
        }
        System.out.println(multi.getFileNames());
        Iterator<String> files = multi.getFileNames();
        while(files.hasNext()){
            String uploadFile = files.next();
                         
            MultipartFile mFile = multi.getFile(uploadFile);
            String fileName = mFile.getOriginalFilename();
            System.out.println("실제 파일 이름 : " +fileName);
            newFileName = System.currentTimeMillis()+"."
                    +fileName.substring(fileName.lastIndexOf(".")+1);
            
            try {
                mFile.transferTo(new File(path+newFileName));
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
		int member_idx=Integer.parseInt(multi.getParameter("member_idx"));
		String thema=multi.getParameter("thema");
		String subject=multi.getParameter("subject");
		java.sql.Date startday=java.sql.Date.valueOf(multi.getParameter("startdaytext"));
		int day=Integer.parseInt(multi.getParameter("day"));
		String plan_story_subject=multi.getParameter("plan_story_subject");
		String plan_story_content=multi.getParameter("plan_story_content");
		String schedule=multi.getParameter("schedule");

		pdto.setStartday(startday);
		pdto.setDay(Integer.parseInt(multi.getParameter("day")));
		System.out.println("getMember_idx="+pdto.getMember_idx());
		System.out.println("getThema="+pdto.getThema());
		System.out.println("getSubject="+pdto.getSubject());
		System.out.println("getStartday="+pdto.getStartday());
		System.out.println("getDay="+pdto.getDay());
		System.out.println("getPlan_story_subject="+pdto.getPlan_story_subject());
		System.out.println("getPlan_story_content="+pdto.getPlan_story_content());
		System.out.println("getSchedule="+pdto.getSchedule());
		mav.setViewName("planner/planSaveResult");
		return mav;
	}
	
	@RequestMapping("/planwriteForm.do")
	public ModelAndView plannerWriteForm(@RequestParam(value = "subject") String subject,
			@RequestParam(value = "startday_year") String startday_year,
			@RequestParam(value = "startday_month") String startday_month,
			@RequestParam(value = "startday_day") String startday_day,
			@RequestParam(value = "thema") String thema) {
		ModelAndView mav = new ModelAndView();
		mav.setViewName("planner/planWrite");
		mav.addObject("subject",subject);
		mav.addObject("startday_year",startday_year);
		mav.addObject("startday_month",startday_month);
		mav.addObject("startday_day",startday_day);
		mav.addObject("thema",thema);
		return mav;
	}
	
	@RequestMapping("/calendar.do")
	public ModelAndView calendar(@RequestParam(value = "year", defaultValue = "-1") int _year,
			@RequestParam(value = "month", defaultValue = "-1") int _month) {
		ModelAndView mav = new ModelAndView();
		
		Calendar now = Calendar.getInstance();
		int year = now.get(Calendar.YEAR);
		int month = now.get(Calendar.MONTH) + 1;

		if (_year != -1) {
			year = _year;
		}
		if (_month != -1) {
			month = _month;
		}
		now.set(year, month - 1, 1); // 출력할 년도, 월로 설정

		year = now.get(Calendar.YEAR); // 변화된 년, 월
		month = now.get(Calendar.MONTH) + 1;
		
		int end = now.getActualMaximum(Calendar.DAY_OF_MONTH); // 해당월의 마지막 날짜
		int w = now.get(Calendar.DAY_OF_WEEK); // 1~7(일~토)
		mav.addObject("year",year);
		mav.addObject("month",month);
		mav.addObject("end",end);
		mav.addObject("w",w);
		mav.setViewName("planner/calendar");
		return mav;
	}
}
