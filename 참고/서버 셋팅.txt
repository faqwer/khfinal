서버 세팅방법(톰캣)

1. 톰캣 홈페이지에서 다운

2. 톰캣 압축파일을 여기에 풀기로 압축해제

bin : 실제 실행하는 파일이 있는 폴더
conf : 설정파일이 들어가 있는 폴더
lib : 라이브러리 폴더
logs : 로그가 저장되는 폴더
temp : 임시폴더
webapps : 실제 만드는 프로젝트가 들어가는 폴더
work : 컨파일한 파일이 들어가는 폴더

3. conf - server.xml - 71번째 줄 connector태그에서 port번호를 8080에서 다른것으로 변경
redirectPort="8443" 옆에 URIEncoding="utf-8" 입력 후 저장 및 닫기

웹의 기본포트 : 80
톰캣의 기본포트 : 8080

오라클은 8080 포트를 이미 사용중

-------------------------------------------------------

dummy server 설정

이클립스 - package Explorer - new - other - server - Apache - 컴퓨터에 설치한 아파치 서버 버전 - Tomcat installation directory 
옆에 Browse 누른 후 아파치가 설치된 폴더까지 (F:\최민수\apache-tomcat-7.0.81) - Finish

-------------------------------------------------------

프로젝트 생성

package Explorer - new - other - Web - Dynamic Web Project

project name : 사이트의 이름

- next - next - Context root(외부에서 접근하는 프로젝트의 이름)
사용자가 Context root로 접속하면 내 컴퓨터의 Content directroy로 접근

Generate web.xml deployment descriptor 체크후 Finish

이클립스 메인메뉴에서 window - preference - general - workspace 선택 - 하단에 Text file encoding - Other 클릭 후
 UTF-8로 변경 후 Apply

window - preference - Web - JSP Files 선택 - Encoding을 UTF-8로 선택 후 Apply

window - preference - Web - JSP Files 확장 - Editor - Templates에서 New JSP File (html)을 클릭 후 Edit 선택 
- DOCTYPE html 옆에 문장 삭제, meta태그에서 charset만 남기고 모두 삭제

Edit 선택 후 아래와 같이 수정

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
</body>
</html>

-------------------------------------------------------

jsp파일 생성

WebContent폴더 오른쪽 클릭 new - other - jspFile

window show view - other - server - server 선택 후 open
콘솔창에서 서버탭 더블클릭 후 맨 밑에 Modules - Add Web Modules 버튼 클릭후 내 프로젝트 등록한뒤 서버탭 클릭 후 서버 스타트

-------------------------------------------------------

jsp 웹에서 확인할때

http://localhost:포트번호/프로젝트 이름/jsp파일명

-------------------------------------------------------

DBCP 설정
tomcat 사이트 - archive - parent directory - commons 폴더 - collections - binaries - commons - collections4-4.1-bin.zip다운
- dbcp - binaries - commons-dbcp2-2.1.1-bin.zip 다운
- pool - binaries - commons-pool-2-2.4.2-bin.zip 다운

프로젝트 WEB-INF - lib 폴더에 라이브러리 복사

<Resource name="jdbc/myoracle" auth="Container"
              type="javax.sql.DataSource" driverClassName="oracle.jdbc.driver.OracleDriver"
              url="jdbc:oracle:thin:@localhost:1521:orcl"
              username="scott" password="1234" maxActive="20" maxIdle="10"
              maxWait="-1"/>

이클립스 프로젝트와 연결되어있는 서버 - server.xml - 38줄(GlobalNamingResources 아래에 붙여넣기)

<ResourceLink global = "jdbc/myoracle" name="jdbc/myoracle" type="javax.sql.DataSource"/>
서버 - context.xml - 18번째줄에 붙여넣기

<resource-ref>
 <description>Oracle Datasource example</description>
 <res-ref-name>jdbc/myoracle</res-ref-name>
 <res-type>javax.sql.DataSource</res-type>
 <res-auth>Container</res-auth>
</resource-ref>

서버 - web.xml - 18번째 줄에 붙여넣기

-------------------------------------------------------

DB 연결

Context initContext = new InitialContext();
Context envContext  = (Context)initContext.lookup("java:/comp/env");
DataSource ds = (DataSource)envContext.lookup("jdbc/myoracle");
Connection conn = ds.getConnection();


